name: Verademo Upload and Scan

on:
#  push:
#    branches: [ main ]
#  pull_request:
#    branches: [ main ]
    workflow_dispatch: 
env:
  API_ID: ${{ secrets.VERACODE_API_ID }}
  API_KEY: ${{ secrets.VERACODE_API_KEY }}
  APP_NAME: VeraGHA


jobs:
  build:
    runs-on: ubuntu-latest
    # grants permissions for the artifact to be uploaded
    permissions:
      contents: read
      packages: write
    
    
    steps:
    
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can acces it and clones the repo
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          
      - name: Build with Maven
        run: |
          cd app/
          mvn -B clean package --file pom.xml
          ls target/
          
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
            # Artifact name
            name: verademo-artifact
            # optional, default is artifact
            # A file, directory or wildcard pattern that describes what to upload
            path: app/target/verademo.war
            # The desired behavior if no files are found using the provided path.
            if-no-files-found: error
  
        
  veracode-sast-analysis:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2.0.10
        with: 
          name: verademo-artifact
          path: analysis/
      - run: pwd
      - run: ls -la analysis/
      
      - name: Veracode Upload And Scan
        # You may pin to the exact commit or the version.
        # uses: veracode/veracode-uploadandscan-action@35794dab9fbcd28fac19e44963f80646b27f4a7f
        uses: veracode/veracode-uploadandscan-action@0.2.4
        with:
          # appname
          appname: VeraGHA
          # createprofile
          createprofile: false # default is true
          # filepath
          filepath: analysis/verademo.war
          # version
          version:  ${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}-${{ github.ref_name }} # default is Scan from Github job: ${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}
          # vid
          vid: ${{secrets.VERACODE_API_ID}}
          # vkey
          vkey: ${{secrets.VERACODE_API_KEY}}

          deleteincompletescan: true # optional
          # specify version of the Java API Wrapper; default is latest
          #javawrapperversion: # optional
          # show detailed diagnostic information, which you can use for debugging, in the output.
          debug: 1 # optional
          
      - name: Get Detailed Report
        uses: actions/setup-python@v2
        with: 
          python-version: 3.8
      - name: Clone HMAC and run script
        run: |
          pip install httpie
          git clone https://github.com/veracode/veracode-python-hmac-example.git
          pip install -r veracode-python-hmac-example/requirements.txt
          export VERACODE_API_KEY_ID=${{ env.API_ID }}
          export VERACODE_API_KEY_SECRET=${{ env.API_KEY }}
          ID=$(http --auth-type veracode_hmac GET "https://api.veracode.com/appsec/v1/applications/?name=${{ env.APP_NAME }}" | jq -r '._embedded.applications[0].id')
          echo GUID: ${ID}
          BUILD_ID=$(http --auth-type veracode_hmac GET "https://analysiscenter.veracode.com/api/5.0/getbuildinfo.do?app_id=$ID" | sed -n 's/.*build_id="\([0-9]*\)".*/\1/p')
          echo Build ID: $BUILD_ID
          http --auth-type veracode_hmac -o summaryreport.pdf GET "https://analysiscenter.veracode.com/api/4.0/detailedrep 
    
        

